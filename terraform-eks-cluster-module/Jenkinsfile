pipeline {
    agent any  
    parameters{
        choice(name: 'action', choices: ['apply', 'destroy'], description: 'Do you want to perform Terraform Apply or Destroy?')
    } 
    stages{
        stage('Checkout') {
          steps {
            sh 'echo passed'
            // git branch: 'main', url: 'https://github.com/KUMAR-REDDY-BAVANASI/Jenkins-Zero-To-Hero.git'
          }
        }

        stage('Run tasks'){
            parallel {
                stage('Terraform Actions Plan | Apply | Destroy for cluster'){
                    stages{
                        stage('terraform init/plan/apply on cluster'){
                            when {
                                expression { params.action == 'apply' }
                            }
                            steps{
                                dir("Jenkins-Zero-To-Hero/terraform-eks-cluster-module/dev/"){
                                // sh "terraform init -reconfigure -input=false -backend=true -backend-config=bucket=devmain-terraform-state -backend-config=key=eks/cluster.tfstate"
                                sh "terraform init -reconfigure -input=false"
                                sh "terraform plan -out plan.out"
                                echo "Terraform action is --> ${action}"
                                sh "terraform ${params.action} -refresh=false"
                            }}
                        }
                        stage('terraform init/destroy on cluster'){
                            when {
                                expression { params.action == 'destroy' }
                            }
                            steps{
                                dir("Jenkins-Zero-To-Hero/terraform-eks-cluster-module/dev/"){
                                // sh "terraform init -reconfigure -input=false -backend=true -backend-config=bucket=devmain-terraform-state -backend-config=key=eks/cluster.tfstate"
                                sh "terraform init -reconfigure -input=false"
                                echo "Terraform action is --> ${action}"
                                sh "terraform ${params.action} -refresh=false --auto-approve"
                            }}
                        }                   
                    }                    
                }                
            }
        }
    }
    // post { 
    //     always { 
    //         cleanWs()
    //     }
    // }
}